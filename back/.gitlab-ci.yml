stages:
  - build
  - test
  - deploy

variables:
  ANSIBLE_PORT: "22"
  ANSIBLE_USER: "your_ansible_user"
  ANSIBLE_SUDO_PASSWORD: "your_ansible_sudo_password"
  CLIENT_HOST: "your_client_host"
  MYSQL_DEVELOP_DATABASE: "your_develop_database"
  MYSQL_DATABASE: "nsa"
  MYSQL_USER: "root"
  MYSQL_PASSWORD: "abcd1234"
  MYSQL_HOST: "your_mysql_host"
  MYSQL_PORT: "3306"

build:
  stage: build
  image: php:7.4-cli
  before_script:
    - apt-get update && apt-get install -y zip
    - curl -sS https://getcomposer.org/installer | php
    - mv composer.phar /usr/local/bin/composer
  script:
    - cd back
    - rm -rf composer.lock
    - composer install --no-scripts --optimize-autoloader
    - zip -r ../artifact.zip vendor/
  artifacts:
    paths:
      - artifact.zip

test:
  stage: test
  dependencies:
    - build
  script:
    - cd back || exit 1 # Exit if the directory doesn't exist
    - cp .env.example .env
    - echo "APP_NAME=Laravel" >> .env
    - echo "APP_ENV=local" >> .env
    - echo "APP_KEY=base64:h55oToUypq1BJwhcBAbtCnKscJGGS7xXF3zoDNf/yWE=" >> .env
    - echo "APP_DEBUG=true" >> .env
    - echo "APP_URL=http://localhost" >> .env
    - echo "LOG_CHANNEL=stderr" >> .env
    - echo "DB_CONNECTION=mysql" >> .env
    - echo "DB_HOST=$MYSQL_HOST" >> .env
    - echo "DB_PORT=$MYSQL_PORT" >> .env
    - echo "DB_DATABASE=$MYSQL_DATABASE" >> .env
    - echo "DB_USERNAME=$MYSQL_USER" >> .env
    - echo "DB_PASSWORD=$MYSQL_PASSWORD" >> .env

deploy:
  stage: deploy
  dependencies:
    - test
  only:
    - main
  image: alpinelinux/ansible:latest
  script:
    - apk add --no-cache sshpass
    - ansible-playbook -i ansible/ansible_deploy_back/inventory.yml ansible/ansible_deploy_back/deploy-black.yml
